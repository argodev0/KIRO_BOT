{
  "timestamp": "2025-08-28T18:16:43.325Z",
  "status": "PASS",
  "summary": {
    "totalChecks": 57,
    "passed": 54,
    "failed": 0,
    "warnings": 3
  },
  "results": {
    "passed": [
      "Monitoring system is activated",
      "Monitoring status is active",
      "Monitoring configuration is enabled",
      "Metrics collection is enabled",
      "Alerting system is enabled",
      "No activation errors detected",
      "monitoringService is active",
      "prometheusMetricsService is active",
      "productionAlertingService is active",
      "systemHealthService is active",
      "alertNotificationService is active",
      "Prometheus metrics endpoint configured",
      "Paper trading safety monitoring is active",
      "System health checks are active",
      "MONITORING_ENABLED is properly configured",
      "METRICS_ENABLED is properly configured",
      "HEALTH_CHECK_ENABLED is properly configured",
      "PRODUCTION_ALERTING_ENABLED is properly configured",
      "Prometheus configuration file exists",
      "Prometheus configuration has content",
      "AlertManager configuration file exists",
      "AlertManager configuration has content",
      "Docker Compose monitoring file exists",
      "Docker Compose monitoring has content",
      "Service file exists: src/services/MonitoringService.ts",
      "src/services/MonitoringService.ts includes Prometheus client",
      "src/services/MonitoringService.ts includes event handling",
      "src/services/MonitoringService.ts implements singleton pattern",
      "Service file exists: src/services/PrometheusMetricsService.ts",
      "src/services/PrometheusMetricsService.ts includes Prometheus client",
      "src/services/PrometheusMetricsService.ts includes event handling",
      "src/services/PrometheusMetricsService.ts implements singleton pattern",
      "Service file exists: src/services/ProductionAlertingService.ts",
      "src/services/ProductionAlertingService.ts includes event handling",
      "src/services/ProductionAlertingService.ts implements singleton pattern",
      "Service file exists: src/services/SystemHealthService.ts",
      "src/services/SystemHealthService.ts includes event handling",
      "src/services/SystemHealthService.ts implements singleton pattern",
      "Service file exists: src/services/AlertNotificationService.ts",
      "src/services/AlertNotificationService.ts includes event handling",
      "src/services/AlertNotificationService.ts implements singleton pattern",
      "Health check endpoint is configured",
      "Prometheus metrics endpoint is configured",
      "Metrics status endpoint is configured",
      "WebSocket stats endpoint is configured",
      "Paper trading status endpoint is configured",
      "MonitoringService is imported",
      "PrometheusMetricsService is imported",
      "ProductionAlertingService is imported",
      "Prometheus rules directory exists",
      "Found 3 alert rule files",
      "Alert rule file paper-trading-safety-alerts.yml has proper structure",
      "Alert rule file real-time-data-alerts.yml has proper structure",
      "Alert rule file trading-bot-alerts.yml has proper structure"
    ],
    "failed": [],
    "warnings": [
      "src/services/ProductionAlertingService.ts may not include Prometheus client",
      "src/services/SystemHealthService.ts may not include Prometheus client",
      "src/services/AlertNotificationService.ts may not include Prometheus client"
    ]
  },
  "monitoringStatus": {
    "activated": true,
    "alertingActive": false,
    "metricsActive": true,
    "healthChecksActive": true
  }
}