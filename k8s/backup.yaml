apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-pvc
  namespace: trading-bot
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: trading-bot
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: backup
            image: trading-bot/backup:latest
            command:
            - /app/scripts/backup.sh
            env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trading-bot-secrets
                  key: POSTGRES_PASSWORD
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: AWS_S3_BUCKET
            envFrom:
            - configMapRef:
                name: backup-config
            volumeMounts:
            - name: backup-storage
              mountPath: /backups
            - name: backup-logs
              mountPath: /app/logs
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-pvc
          - name: backup-logs
            emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-config
  namespace: trading-bot
data:
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "trading_bot"
  POSTGRES_USER: "postgres"
  BACKUP_RETENTION_DAYS: "30"
  AWS_REGION: "us-east-1"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-job
  namespace: trading-bot
spec:
  schedule: "0 3 * * 0"  # Weekly on Sunday at 3 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: cleanup
            image: trading-bot/backup:latest
            command:
            - /app/scripts/cleanup.sh
            env:
            - name: RETENTION_DAYS
              value: "7"
            volumeMounts:
            - name: backup-storage
              mountPath: /backups
            - name: backup-logs
              mountPath: /app/logs
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-pvc
          - name: backup-logs
            emptyDir: {}