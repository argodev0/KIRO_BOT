# AI Crypto Trading Bot - Production Environment Template
# Copy this file to .env.production and configure for your deployment

# ============================================================================
# CRITICAL PAPER TRADING SAFETY CONFIGURATION
# ============================================================================
# These settings MUST be configured correctly for production safety
# The system will refuse to start if these are not properly set

# REQUIRED: Paper trading mode enforcement
PAPER_TRADING_MODE=true
ALLOW_REAL_TRADES=false
FORCE_PAPER_TRADING=true
PAPER_TRADING_VALIDATION=strict

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

NODE_ENV=production
PORT=3000
HOST=0.0.0.0

# ============================================================================
# SSL AND DOMAIN CONFIGURATION
# ============================================================================
# REQUIRED for production deployment

# Your domain name (REQUIRED)
DOMAIN_NAME=your-domain.com

# Email for Let's Encrypt SSL certificates (REQUIRED)
LETSENCRYPT_EMAIL=your-email@example.com

# SSL Configuration
SSL_ENABLED=true
SSL_CERT_PATH=/etc/letsencrypt/live/your-domain.com/fullchain.pem
SSL_KEY_PATH=/etc/letsencrypt/live/your-domain.com/privkey.pem
SSL_CA_PATH=/etc/letsencrypt/live/your-domain.com/chain.pem

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL password (REQUIRED - generate a strong password)
POSTGRES_PASSWORD=your-strong-postgres-password-here

# Database configuration
DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/trading_bot
DATABASE_SSL=true
DATABASE_POOL_SIZE=20
DATABASE_CONNECTION_TIMEOUT=30000

# ============================================================================
# CACHE AND MESSAGE QUEUE
# ============================================================================

# Redis configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password-here
REDIS_DB=0
REDIS_TLS=false

# RabbitMQ configuration
RABBITMQ_USER=your-rabbitmq-user
RABBITMQ_PASSWORD=your-rabbitmq-password
RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
RABBITMQ_HEARTBEAT=60
RABBITMQ_CONNECTION_TIMEOUT=30000

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# JWT Secret (REQUIRED - generate a strong secret, min 32 characters)
JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long

# Encryption key for sensitive data (REQUIRED - generate a strong key)
ENCRYPTION_KEY=your-encryption-key-32-characters-long

# Authentication configuration
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d
JWT_ALGORITHM=HS256

# Password hashing
BCRYPT_ROUNDS=12

# Security features
HELMET_ENABLED=true
CSRF_PROTECTION=true
CORS_ORIGIN=https://your-domain.com

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=100

# ============================================================================
# EXCHANGE API CONFIGURATION - MAINNET READ-ONLY
# ============================================================================
# CRITICAL: These MUST be READ-ONLY API keys for paper trading safety

# Binance API (READ-ONLY keys required)
BINANCE_API_KEY=your-binance-read-only-api-key
BINANCE_API_SECRET=your-binance-read-only-api-secret
BINANCE_SANDBOX=false
BINANCE_MAINNET=true
BINANCE_READ_ONLY=true

# KuCoin API (READ-ONLY keys required)
KUCOIN_API_KEY=your-kucoin-read-only-api-key
KUCOIN_API_SECRET=your-kucoin-read-only-api-secret
KUCOIN_PASSPHRASE=your-kucoin-passphrase
KUCOIN_SANDBOX=false
KUCOIN_MAINNET=true
KUCOIN_READ_ONLY=true

# ============================================================================
# MONITORING AND LOGGING
# ============================================================================

# Prometheus and Grafana
PROMETHEUS_PORT=9090
GRAFANA_PORT=3001
GRAFANA_PASSWORD=your-grafana-admin-password

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json
METRICS_ENABLED=true
HEALTH_CHECK_ENABLED=true

# ============================================================================
# PAPER TRADING CONFIGURATION
# ============================================================================

# Virtual balances for paper trading
VIRTUAL_BALANCE_USD=100000
VIRTUAL_BALANCE_BTC=10
VIRTUAL_BALANCE_ETH=100

# Trading simulation settings
TRADING_FEE_SIMULATION=0.001
SLIPPAGE_SIMULATION=0.0005
PAPER_TRADE_AUDIT_LOG=true

# ============================================================================
# PERFORMANCE CONFIGURATION
# ============================================================================

MAX_CONCURRENT_CONNECTIONS=1000
WEBSOCKET_MAX_CONNECTIONS=500
API_TIMEOUT=30000
CACHE_TTL=300

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================

BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# AWS S3 backup (optional)
AWS_S3_BACKUP=false
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET=your-backup-bucket

# ============================================================================
# ALERT CONFIGURATION
# ============================================================================

# Webhook for alerts (optional)
ALERT_WEBHOOK_URL=https://your-webhook-url.com/alerts

# Email for alerts (optional)
ALERT_EMAIL=alerts@your-domain.com

# Critical alerts
CRITICAL_ALERT_ENABLED=true

# ============================================================================
# DEPLOYMENT NOTES
# ============================================================================
#
# 1. Replace all placeholder values with your actual configuration
# 2. Generate strong passwords and secrets (use tools like openssl rand -base64 32)
# 3. Ensure your domain DNS points to your server
# 4. Use READ-ONLY exchange API keys for maximum safety
# 5. Test the configuration with: npm run validate:production
# 6. Deploy with: npm run deploy:production
#
# SECURITY REMINDERS:
# - Never commit this file with real credentials to version control
# - Use strong, unique passwords for all services
# - Regularly rotate API keys and passwords
# - Monitor logs for any security events
# - Keep the system updated with security patches
#
# PAPER TRADING SAFETY:
# - This system is designed for paper trading ONLY
# - Real trading is blocked at multiple levels
# - All trades are simulated with virtual balances
# - No real money will ever be at risk
#