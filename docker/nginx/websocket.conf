# WebSocket Configuration for Real-time Market Data Streaming
# Optimized for high-frequency trading data and paper trading safety

# WebSocket upstream with connection pooling
upstream websocket_backend {
    server backend:3000 max_fails=2 fail_timeout=30s weight=1;
    keepalive 16;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

# WebSocket proxy configuration
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Rate limiting for WebSocket connections
limit_req_zone $binary_remote_addr zone=ws_connect:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=ws_data:10m rate=100r/s;

# Connection limiting per IP
limit_conn_zone $binary_remote_addr zone=ws_perip:10m;

server {
    # WebSocket-specific locations
    
    # Main Socket.IO endpoint
    location /socket.io/ {
        # Rate limiting
        limit_req zone=ws_connect burst=10 nodelay;
        limit_req zone=ws_data burst=200 nodelay;
        limit_conn ws_perip 20;
        
        # Paper trading safety headers - CRITICAL
        proxy_set_header X-Paper-Trading-Mode "true";
        proxy_set_header X-Force-Paper-Trading "true";
        proxy_set_header X-Trading-Environment "PAPER_ONLY";
        proxy_set_header X-Real-Trading-Blocked "true";
        proxy_set_header X-WebSocket-Type "market-data";
        
        # WebSocket upgrade configuration
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket-specific timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 86400s;
        proxy_read_timeout 86400s;
        
        # Disable buffering for real-time data
        proxy_buffering off;
        proxy_cache off;
        
        # Enable compression for WebSocket frames
        proxy_set_header Accept-Encoding gzip, deflate;
        
        # Custom headers for monitoring
        proxy_set_header X-WebSocket-Client-IP $remote_addr;
        proxy_set_header X-WebSocket-Start-Time $msec;
        
        # Logging for WebSocket connections
        access_log /var/log/nginx/websocket_access.log websocket;
        error_log /var/log/nginx/websocket_error.log warn;
    }
    
    # Alternative WebSocket endpoint (raw WebSocket)
    location /ws/ {
        # Rate limiting
        limit_req zone=ws_connect burst=10 nodelay;
        limit_req zone=ws_data burst=200 nodelay;
        limit_conn ws_perip 20;
        
        # Paper trading safety headers
        proxy_set_header X-Paper-Trading-Mode "true";
        proxy_set_header X-Force-Paper-Trading "true";
        proxy_set_header X-Trading-Environment "PAPER_ONLY";
        
        # WebSocket upgrade
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Standard headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 86400s;
        proxy_read_timeout 86400s;
        proxy_buffering off;
        
        # Logging
        access_log /var/log/nginx/websocket_raw_access.log main;
    }
    
    # Server-Sent Events (SSE) endpoint for fallback
    location /events/ {
        # Rate limiting for SSE
        limit_req zone=ws_data burst=100 nodelay;
        
        # Paper trading headers
        proxy_set_header X-Paper-Trading-Mode "true";
        proxy_set_header X-Force-Paper-Trading "true";
        
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE-specific headers
        proxy_set_header Cache-Control "no-cache";
        proxy_set_header Connection "keep-alive";
        
        # Disable buffering for real-time events
        proxy_buffering off;
        proxy_cache off;
        
        # SSE timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 86400s;
        proxy_read_timeout 86400s;
        
        # Add SSE headers
        add_header Content-Type "text/event-stream";
        add_header Cache-Control "no-cache";
        add_header Connection "keep-alive";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Cache-Control";
    }
    
    # WebSocket health check endpoint
    location /ws/health {
        # No rate limiting for health checks
        access_log off;
        
        proxy_pass http://websocket_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Add health check headers
        add_header X-WebSocket-Health "ok";
        add_header X-Paper-Trading-Mode "true";
    }
}

# WebSocket monitoring and metrics
log_format websocket_detailed '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for" '
                              'connection_upgrade="$http_upgrade" '
                              'connection="$http_connection" '
                              'ws_protocol="$http_sec_websocket_protocol" '
                              'ws_key="$http_sec_websocket_key" '
                              'request_time=$request_time '
                              'upstream_response_time=$upstream_response_time';