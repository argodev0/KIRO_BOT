modules:
  http_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: GET
      headers:
        Host: localhost
        Accept-Language: en-US
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  http_post_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: POST
      headers:
        Content-Type: application/json
      body: '{}'

  tcp_connect:
    prober: tcp
    timeout: 5s

  pop3s_banner:
    prober: tcp
    timeout: 5s
    tcp:
      query_response:
        - expect: "^+OK"
      tls: true
      tls_config:
        insecure_skip_verify: false

  grpc:
    prober: grpc
    timeout: 5s
    grpc:
      tls: true
      preferred_ip_protocol: "ip4"

  grpc_plain:
    prober: grpc
    timeout: 5s
    grpc:
      tls: false
      service: "service"
      preferred_ip_protocol: "ip4"

  ssh_banner:
    prober: tcp
    timeout: 5s
    tcp:
      query_response:
        - expect: "^SSH-2.0-"
      preferred_ip_protocol: "ip4"

  irc_banner:
    prober: tcp
    timeout: 5s
    tcp:
      query_response:
        - send: "NICK prober"
        - send: "USER prober prober prober :prober"
        - expect: "PING :([^ ]+)"
          send: "PONG :${1}"
        - expect: "^:[^ ]+ 001"

  icmp:
    prober: icmp
    timeout: 5s
    icmp:
      preferred_ip_protocol: "ip4"
      source_ip_address: "127.0.0.1"

  icmp_ttl5:
    prober: icmp
    timeout: 5s
    icmp:
      ttl: 5
      preferred_ip_protocol: "ip4"
      source_ip_address: "127.0.0.1"

  dns_udp:
    prober: dns
    timeout: 5s
    dns:
      query_name: "localhost"
      query_type: "A"
      valid_rcodes:
        - NOERROR
      validate_answer_rrs:
        fail_if_matches_regexp:
          - ".*127.0.0.1"
        fail_if_all_match_regexp:
          - ".*127.0.0.1"
        fail_if_not_matches_regexp:
          - "www.prometheus.io.\t300\tIN\tA\t127.0.0.1"
        fail_if_none_matches_regexp:
          - "127.0.0.1"
      validate_authority_rrs:
        fail_if_matches_regexp:
          - ".*127.0.0.1"
      validate_additional_rrs:
        fail_if_matches_regexp:
          - ".*127.0.0.1"
      preferred_ip_protocol: "ip4"
      source_ip_address: "127.0.0.1"

  dns_soa:
    prober: dns
    timeout: 5s
    dns:
      query_name: "localhost"
      query_type: "SOA"
      preferred_ip_protocol: "ip4"
      source_ip_address: "127.0.0.1"

  dns_tcp:
    prober: dns
    timeout: 5s
    dns:
      transport_protocol: "tcp"
      preferred_ip_protocol: "ip4"
      query_name: "localhost"
      query_type: "A"
      source_ip_address: "127.0.0.1"

  ssl_expiry:
    prober: tcp
    timeout: 5s
    tcp:
      tls: true
      tls_config:
        insecure_skip_verify: false

  # Trading Bot Specific Modules
  trading_bot_health:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        Accept: application/json
      body_size_limit: 1MB
      fail_if_body_not_matches_regexp:
        - '"status":\s*"healthy"'

  trading_bot_metrics:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        Accept: text/plain
      body_size_limit: 10MB
      fail_if_body_not_matches_regexp:
        - 'kiro_bot_.*'

  paper_trading_status:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        Accept: application/json
      body_size_limit: 1MB
      fail_if_body_not_matches_regexp:
        - '"paperTradingMode":\s*true'
        - '"allowRealTrades":\s*false'

  websocket_health:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        Accept: application/json
      body_size_limit: 1MB
      fail_if_body_not_matches_regexp:
        - '"status":\s*"healthy"'

  exchange_api_binance:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "Kiro-Bot-Monitor/1.0"
      fail_if_body_not_matches_regexp:
        - '.*'

  exchange_api_kucoin:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "Kiro-Bot-Monitor/1.0"
      fail_if_body_not_matches_regexp:
        - '"code":\s*"200000"'